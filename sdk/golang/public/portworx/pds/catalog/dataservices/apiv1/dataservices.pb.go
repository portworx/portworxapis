// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: public/portworx/pds/catalog/dataservices/apiv1/dataservices.proto

package dataservices

import (
	apiv1 "github.com/portworx/portworxapis/sdk/golang/public/portworx/common/apiv1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enabled indicate list either all, enabled only or disabled only data services.
type ListDataServicesRequest_Enabled int32

const (
	// List all data services.
	ListDataServicesRequest_ENABLED_UNSPECIFIED ListDataServicesRequest_Enabled = 0
	// List only enabled data services.
	ListDataServicesRequest_TRUE ListDataServicesRequest_Enabled = 1
	// List only disabled data services.
	ListDataServicesRequest_FALSE ListDataServicesRequest_Enabled = 2
)

// Enum value maps for ListDataServicesRequest_Enabled.
var (
	ListDataServicesRequest_Enabled_name = map[int32]string{
		0: "ENABLED_UNSPECIFIED",
		1: "TRUE",
		2: "FALSE",
	}
	ListDataServicesRequest_Enabled_value = map[string]int32{
		"ENABLED_UNSPECIFIED": 0,
		"TRUE":                1,
		"FALSE":               2,
	}
)

func (x ListDataServicesRequest_Enabled) Enum() *ListDataServicesRequest_Enabled {
	p := new(ListDataServicesRequest_Enabled)
	*p = x
	return p
}

func (x ListDataServicesRequest_Enabled) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListDataServicesRequest_Enabled) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_enumTypes[0].Descriptor()
}

func (ListDataServicesRequest_Enabled) Type() protoreflect.EnumType {
	return &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_enumTypes[0]
}

func (x ListDataServicesRequest_Enabled) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListDataServicesRequest_Enabled.Descriptor instead.
func (ListDataServicesRequest_Enabled) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{1, 0}
}

// Request to get the data service resource.
type GetDataServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the Data Service.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDataServiceRequest) Reset() {
	*x = GetDataServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataServiceRequest) ProtoMessage() {}

func (x *GetDataServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataServiceRequest.ProtoReflect.Descriptor instead.
func (*GetDataServiceRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{0}
}

func (x *GetDataServiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to list the data service resources.
type ListDataServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter data services based on enabled flag.
	Enabled ListDataServicesRequest_Enabled `protobuf:"varint,1,opt,name=enabled,proto3,enum=public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest_Enabled" json:"enabled,omitempty"`
	// Sorting details using which requested list of data services are to be sorted.
	Sort *apiv1.Sort `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Pagination parameters for listing data services.
	Pagination *apiv1.PageBasedPaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListDataServicesRequest) Reset() {
	*x = ListDataServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataServicesRequest) ProtoMessage() {}

func (x *ListDataServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataServicesRequest.ProtoReflect.Descriptor instead.
func (*ListDataServicesRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{1}
}

func (x *ListDataServicesRequest) GetEnabled() ListDataServicesRequest_Enabled {
	if x != nil {
		return x.Enabled
	}
	return ListDataServicesRequest_ENABLED_UNSPECIFIED
}

func (x *ListDataServicesRequest) GetSort() *apiv1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListDataServicesRequest) GetPagination() *apiv1.PageBasedPaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Response for listing data service.
type ListDataServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of data service resources.
	DataServices []*DataService `protobuf:"bytes,1,rep,name=data_services,json=dataServices,proto3" json:"data_services,omitempty"`
	// (-- api-linter: core::0132::response-unknown-fields=disabled
	//
	//	aip.dev/not-precedent: We need this field for pagination. --)
	//
	// Pagination metadata for this response.
	Pagination *apiv1.PageBasedPaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListDataServicesResponse) Reset() {
	*x = ListDataServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataServicesResponse) ProtoMessage() {}

func (x *ListDataServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataServicesResponse.ProtoReflect.Descriptor instead.
func (*ListDataServicesResponse) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{2}
}

func (x *ListDataServicesResponse) GetDataServices() []*DataService {
	if x != nil {
		return x.DataServices
	}
	return nil
}

func (x *ListDataServicesResponse) GetPagination() *apiv1.PageBasedPaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// A data service is a independent, loosely coupled function that calculate information collected and saved in data storage volumes.
type DataService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of the data service.
	Meta *apiv1.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Desired info of the data service.
	Info *Info `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *DataService) Reset() {
	*x = DataService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataService) ProtoMessage() {}

func (x *DataService) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataService.ProtoReflect.Descriptor instead.
func (*DataService) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{3}
}

func (x *DataService) GetMeta() *apiv1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DataService) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

// Desired Info of the data service.
type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Short name of the data service.
	ShortName string `protobuf:"bytes,1,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	// Enabled flag suggests if the data service is enabled or not.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Node restrictions.
	NodeRestrictions *NodeRestrictions `protobuf:"bytes,3,opt,name=node_restrictions,json=nodeRestrictions,proto3" json:"node_restrictions,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{4}
}

func (x *Info) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Info) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Info) GetNodeRestrictions() *NodeRestrictions {
	if x != nil {
		return x.NodeRestrictions
	}
	return nil
}

// Node Restrictions defines the number of replicas of data service on which the restrictions are imposed.
// Eg: allowed_sizes = [1,2,4,6]; downsize_enabled = true;  resize_disabled_sizes = [2].
type NodeRestrictions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of all allowed node sizes.
	AllowedSizes []int64 `protobuf:"varint,1,rep,packed,name=allowed_sizes,json=allowedSizes,proto3" json:"allowed_sizes,omitempty"`
	// Flag to determine whether downsizing the cluster is enabled during editing.
	DownsizeEnabled bool `protobuf:"varint,2,opt,name=downsize_enabled,json=downsizeEnabled,proto3" json:"downsize_enabled,omitempty"`
	// List of all node sizes that are not allowed to change during editing.
	ResizeDisabledSizes []int64 `protobuf:"varint,3,rep,packed,name=resize_disabled_sizes,json=resizeDisabledSizes,proto3" json:"resize_disabled_sizes,omitempty"`
}

func (x *NodeRestrictions) Reset() {
	*x = NodeRestrictions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRestrictions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRestrictions) ProtoMessage() {}

func (x *NodeRestrictions) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRestrictions.ProtoReflect.Descriptor instead.
func (*NodeRestrictions) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP(), []int{5}
}

func (x *NodeRestrictions) GetAllowedSizes() []int64 {
	if x != nil {
		return x.AllowedSizes
	}
	return nil
}

func (x *NodeRestrictions) GetDownsizeEnabled() bool {
	if x != nil {
		return x.DownsizeEnabled
	}
	return false
}

func (x *NodeRestrictions) GetResizeDisabledSizes() []int64 {
	if x != nil {
		return x.ResizeDisabledSizes
	}
	return nil
}

var File_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto protoreflect.FileDescriptor

var file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDesc = []byte{
	0x0a, 0x41, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x27, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd0, 0x02, 0x0a, 0x17, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x64, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x52, 0x55, 0x45, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x02, 0x22, 0xd1, 0x01, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x64, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x93, 0x01, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x69,
	0x7a, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x13, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x32, 0x99, 0x03,
	0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb9, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x64, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21,
	0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x44, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x64, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x70, 0x64,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x9b, 0x01, 0x0a, 0x2f, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x75, 0x72, 0x65, 0x2d, 0x70, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescOnce sync.Once
	file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescData = file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDesc
)

func file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescGZIP() []byte {
	file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescOnce.Do(func() {
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescData)
	})
	return file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDescData
}

var file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_goTypes = []interface{}{
	(ListDataServicesRequest_Enabled)(0),      // 0: public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest.Enabled
	(*GetDataServiceRequest)(nil),             // 1: public.portworx.pds.catalog.dataservices.v1.GetDataServiceRequest
	(*ListDataServicesRequest)(nil),           // 2: public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest
	(*ListDataServicesResponse)(nil),          // 3: public.portworx.pds.catalog.dataservices.v1.ListDataServicesResponse
	(*DataService)(nil),                       // 4: public.portworx.pds.catalog.dataservices.v1.DataService
	(*Info)(nil),                              // 5: public.portworx.pds.catalog.dataservices.v1.Info
	(*NodeRestrictions)(nil),                  // 6: public.portworx.pds.catalog.dataservices.v1.NodeRestrictions
	(*apiv1.Sort)(nil),                        // 7: public.portworx.common.v1.Sort
	(*apiv1.PageBasedPaginationRequest)(nil),  // 8: public.portworx.common.v1.PageBasedPaginationRequest
	(*apiv1.PageBasedPaginationResponse)(nil), // 9: public.portworx.common.v1.PageBasedPaginationResponse
	(*apiv1.Meta)(nil),                        // 10: public.portworx.common.v1.Meta
}
var file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_depIdxs = []int32{
	0,  // 0: public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest.enabled:type_name -> public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest.Enabled
	7,  // 1: public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest.sort:type_name -> public.portworx.common.v1.Sort
	8,  // 2: public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest.pagination:type_name -> public.portworx.common.v1.PageBasedPaginationRequest
	4,  // 3: public.portworx.pds.catalog.dataservices.v1.ListDataServicesResponse.data_services:type_name -> public.portworx.pds.catalog.dataservices.v1.DataService
	9,  // 4: public.portworx.pds.catalog.dataservices.v1.ListDataServicesResponse.pagination:type_name -> public.portworx.common.v1.PageBasedPaginationResponse
	10, // 5: public.portworx.pds.catalog.dataservices.v1.DataService.meta:type_name -> public.portworx.common.v1.Meta
	5,  // 6: public.portworx.pds.catalog.dataservices.v1.DataService.info:type_name -> public.portworx.pds.catalog.dataservices.v1.Info
	6,  // 7: public.portworx.pds.catalog.dataservices.v1.Info.node_restrictions:type_name -> public.portworx.pds.catalog.dataservices.v1.NodeRestrictions
	1,  // 8: public.portworx.pds.catalog.dataservices.v1.DataServicesService.GetDataService:input_type -> public.portworx.pds.catalog.dataservices.v1.GetDataServiceRequest
	2,  // 9: public.portworx.pds.catalog.dataservices.v1.DataServicesService.ListDataServices:input_type -> public.portworx.pds.catalog.dataservices.v1.ListDataServicesRequest
	4,  // 10: public.portworx.pds.catalog.dataservices.v1.DataServicesService.GetDataService:output_type -> public.portworx.pds.catalog.dataservices.v1.DataService
	3,  // 11: public.portworx.pds.catalog.dataservices.v1.DataServicesService.ListDataServices:output_type -> public.portworx.pds.catalog.dataservices.v1.ListDataServicesResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_init() }
func file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_init() {
	if File_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRestrictions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_goTypes,
		DependencyIndexes: file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_depIdxs,
		EnumInfos:         file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_enumTypes,
		MessageInfos:      file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_msgTypes,
	}.Build()
	File_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto = out.File
	file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_rawDesc = nil
	file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_goTypes = nil
	file_public_portworx_pds_catalog_dataservices_apiv1_dataservices_proto_depIdxs = nil
}
