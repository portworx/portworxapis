// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: public/portworx/pds/copilot/apiv1/copilot.proto

package copilot

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Search request to query.
type SearchQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the dataservice.
	DataServiceId string `protobuf:"bytes,1,opt,name=data_service_id,json=dataServiceId,proto3" json:"data_service_id,omitempty"`
	// Query string.
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchQueryRequest) Reset() {
	*x = SearchQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryRequest) ProtoMessage() {}

func (x *SearchQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryRequest.ProtoReflect.Descriptor instead.
func (*SearchQueryRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescGZIP(), []int{0}
}

func (x *SearchQueryRequest) GetDataServiceId() string {
	if x != nil {
		return x.DataServiceId
	}
	return ""
}

func (x *SearchQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// Response structure contains fields for query response from copilot service.
type SearchQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (-- api-linter: core::0158::response-repeated-first-field=disabled
	//
	//	aip.dev/not-precedent: We need to do this because of the copilot response. --)
	//
	// (-- api-linter: core::0158::response-plural-first-field=disabled
	//
	//	aip.dev/not-precedent: We need to do this because of the copilot response. --)
	//
	// Id of the dataservice.
	DataServiceId string `protobuf:"bytes,1,opt,name=data_service_id,json=dataServiceId,proto3" json:"data_service_id,omitempty"`
	// Unique id of response.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Query string.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// Response string.
	Response string `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
	// Response time.
	ResponseTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
}

func (x *SearchQueryResponse) Reset() {
	*x = SearchQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueryResponse) ProtoMessage() {}

func (x *SearchQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueryResponse.ProtoReflect.Descriptor instead.
func (*SearchQueryResponse) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescGZIP(), []int{1}
}

func (x *SearchQueryResponse) GetDataServiceId() string {
	if x != nil {
		return x.DataServiceId
	}
	return ""
}

func (x *SearchQueryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchQueryResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchQueryResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *SearchQueryResponse) GetResponseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

var File_public_portworx_pds_copilot_apiv1_copilot_proto protoreflect.FileDescriptor

var file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x52, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xac, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x70, 0x69,
	0x6c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x32, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73,
	0x2e, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x70, 0x64, 0x73, 0x2e, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16,
	0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x77, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64,
	0x73, 0x2e, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x43, 0x6f,
	0x70, 0x69, 0x6c, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x72, 0x65, 0x2d, 0x70, 0x78,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescOnce sync.Once
	file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescData = file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDesc
)

func file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescGZIP() []byte {
	file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescOnce.Do(func() {
		file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescData)
	})
	return file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDescData
}

var file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_public_portworx_pds_copilot_apiv1_copilot_proto_goTypes = []interface{}{
	(*SearchQueryRequest)(nil),    // 0: public.portworx.pds.copilot.v1.SearchQueryRequest
	(*SearchQueryResponse)(nil),   // 1: public.portworx.pds.copilot.v1.SearchQueryResponse
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_public_portworx_pds_copilot_apiv1_copilot_proto_depIdxs = []int32{
	2, // 0: public.portworx.pds.copilot.v1.SearchQueryResponse.response_time:type_name -> google.protobuf.Timestamp
	0, // 1: public.portworx.pds.copilot.v1.CopilotService.SearchQuery:input_type -> public.portworx.pds.copilot.v1.SearchQueryRequest
	1, // 2: public.portworx.pds.copilot.v1.CopilotService.SearchQuery:output_type -> public.portworx.pds.copilot.v1.SearchQueryResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_public_portworx_pds_copilot_apiv1_copilot_proto_init() }
func file_public_portworx_pds_copilot_apiv1_copilot_proto_init() {
	if File_public_portworx_pds_copilot_apiv1_copilot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_portworx_pds_copilot_apiv1_copilot_proto_goTypes,
		DependencyIndexes: file_public_portworx_pds_copilot_apiv1_copilot_proto_depIdxs,
		MessageInfos:      file_public_portworx_pds_copilot_apiv1_copilot_proto_msgTypes,
	}.Build()
	File_public_portworx_pds_copilot_apiv1_copilot_proto = out.File
	file_public_portworx_pds_copilot_apiv1_copilot_proto_rawDesc = nil
	file_public_portworx_pds_copilot_apiv1_copilot_proto_goTypes = nil
	file_public_portworx_pds_copilot_apiv1_copilot_proto_depIdxs = nil
}
